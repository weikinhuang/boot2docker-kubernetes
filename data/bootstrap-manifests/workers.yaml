apiVersion: v1
kind: Namespace
metadata:
  name: workers
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: k8s-worker-script
  namespace: workers
data:
  kubectl-sa: |
    #!/bin/sh

    exec kubectl \
      --server=https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_PORT_443_TCP_PORT \
      --namespace="$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)" \
      --token="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
      --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
        "$@"

  worker-script.sh: |
    #!/bin/sh

    set -x

    . automate-scale.sh

    while :; do sleep 3600; done;

  automate-scale.sh: |
    #!/bin/sh
    set -x

    DESIRED_PODS=$(kubectl-sa get deploy -n workers k8s-worker | grep k8s-worker | awk '{print $2}')

    docker run \
      --rm \
      --volume /var/run/docker.sock:/var/run/docker.sock \
      --volume "${COMPOSE_DIR}:${COMPOSE_DIR}" \
      --workdir "${COMPOSE_DIR}" \
      docker/compose:1.16.1 \
        up -d --no-recreate --no-build --scale ${NODE_TYPE}=${DESIRED_PODS:-0}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: workers-controller
  namespace: workers
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: workers-controller
  namespace: workers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: workers-controller
subjects:
- kind: ServiceAccount
  name: default
  namespace: workers
